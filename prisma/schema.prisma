// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id             Int              @id @default(autoincrement())
  username       String
  email          String           @unique
  password       String
  role           Roles            @relation(fields: [roleId], references: [id])
  roleId         Int
  Events         Events[]
  Proposals      Proposals[]
  Saveds         Saveds[]
  serviceReviews ServiceReviews[]
}

model Roles {
  id       Int     @id @default(autoincrement())
  roleName String
  Users    Users[]
}

model Sponsorships {
  id                   Int             @id @default(autoincrement())
  companyName          String
  companyDesc          String
  province             String
  city                 String
  district             String
  completeAddress      String
  category             Categories      @relation(fields: [categoryId], references: [id])
  categoryId           Int             @unique
  withDrawTime         withDrawTimes   @relation(fields: [withDrawalTimeId], references: [id])
  withDrawalTimeId     Int             @unique
  limitEventSubmission Int
  applicationExpired   Int
  reportDeadline       Int
  Proposals            Proposals[]
  Saveds               Saveds[]
  EventsReports        EventsReports[]
}

model Categories {
  id           Int           @id @default(autoincrement())
  categoryName String
  sponsorship  Sponsorships?
}

model withDrawTimes {
  id          Int           @id @default(autoincrement())
  time        Int
  sponsorship Sponsorships?
}

model Events {
  id              Int             @id @default(autoincrement())
  eventName       String
  eventDate       DateTime
  province        String
  city            String
  district        String
  completeAddress String
  mapsLink        String
  eventDesc       String
  user            Users           @relation(fields: [userId], references: [id])
  userId          Int
  Proposals       Proposals[]
  EventsReports   EventsReports[]
}

model Proposals {
  id               Int              @id @default(autoincrement())
  file_path        String
  user             Users            @relation(fields: [userId], references: [id])
  userId           Int
  event            Events           @relation(fields: [eventId], references: [id])
  eventId          Int
  sponsorship      Sponsorships     @relation(fields: [sponsorshipId], references: [id])
  sponsorshipId    Int
  status           ProposalStatuses @relation(fields: [proposalStatusId], references: [id])
  proposalStatusId Int
}

model ProposalStatuses {
  id         Int         @id @default(autoincrement())
  status     String
  statusDesc String
  Proposals  Proposals[]
}

model Saveds {
  id            Int          @id @default(autoincrement())
  user          Users        @relation(fields: [userId], references: [id])
  userId        Int
  sponsorship   Sponsorships @relation(fields: [sponsorshipId], references: [id])
  sponsorshipId Int
}

model ServiceReviews {
  id     Int   @id @default(autoincrement())
  user   Users @relation(fields: [userId], references: [id])
  userId Int
}

model EventsReports {
  id            Int          @id @default(autoincrement())
  event         Events       @relation(fields: [eventId], references: [id])
  eventId       Int
  sponsor       Sponsorships @relation(fields: [sponsorshipId], references: [id])
  sponsorshipId Int
}
